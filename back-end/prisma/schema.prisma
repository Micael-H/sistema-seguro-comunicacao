generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  resetToken   String? 
  deletedAt    DateTime?
  anonymized   Boolean  @default(false)
  roleId       String
  role         Role     @relation(fields: [roleId], references: [id])
  accessLogs   AccessLog[]
  passwordResets PasswordReset[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Role {
  id          String         @id @default(uuid())
  name        String         @unique
  description String?
  users       User[]
  permissions RolePermission[]
}

model Permission {
  id          String         @id @default(uuid())
  name        String         @unique
  description String?
  roles       RolePermission[]
}

model RolePermission {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
  @@id([roleId, permissionId])
}

model AccessLog {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  timestamp DateTime @default(now())
  action    String
  ipAddress String
}

model PasswordReset {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  token     String   @unique
  expiresAt DateTime
}
